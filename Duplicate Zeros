public class Solution {
    public void DuplicateZeros(int[] arr) {
        //Input: arr = [1,0,2,3,0,4,5,0]
        var countZero=0;//arr.Count(x=>x==0);
        int arrL=arr.Length-1 ;
        
        for (int left = 0; left <= arrL - countZero; left++)
        {
            if (arr[left] == 0)
            {
                // Edge case: zero at the boundary
                //Store manually 0 at the end and break so not to overflow
                if (left == arrL - countZero)
                {
                    arr[arrL] = 0;
                    arrL--;
                    break;
                }
                countZero++;
            }
        }

        int last = arrL - countZero;
        for (int i = last; i >= 0;i--)
        {
            if (arr[i] == 0)
            {
                arr[i + countZero] = 0;
                countZero--;
                arr[i + countZero] = 0;
            }
            else
            {
                arr[i+countZero] = arr[i];
            }
        }       
    }
}
